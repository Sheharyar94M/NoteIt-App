plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "kotlin-kapt"
    id "kotlin-parcelize"
    id "org.jetbrains.kotlin.plugin.serialization"
    id "androidx.navigation.safeargs.kotlin"
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
}

kapt {
    correctErrorTypes true
}

android {
    namespace 'playaxis.appinn.note_it'
    compileSdk 35

//    signingConfigs {
//        release {
////            storeFile file('D:\\assets\\TheLogoMaker\\jks\\theLogoMakerKeyStore.jks')
////            storePassword '123456'
////            keyAlias 'key0'
////            keyPassword '123456'
//        }
//        debug {
////            storeFile file('D:\\assets\\TheLogoMaker\\jks\\theLogoMakerKeyStore.jks')
////            storePassword '123456'
////            keyAlias 'key0'
////            keyPassword '123456'
//        }
//    }

    defaultConfig {
        applicationId "com.example.quicknotepad"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                // See https://developer.android.com/training/data-storage/room/migrating-db-versions
                compilerArgumentProviders(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ["-opt-in=kotlinx.serialization.ExperimentalSerializationApi",]
    }

    buildFeatures {
        buildConfig true
        viewBinding true
    }

    sourceSets {
        // This just add "kotlin" folder to source sets since the default is "java".
        main {
            java.srcDirs += "src/main/kotlin"
        }
        debug {
            java.srcDirs += "src/debug/kotlin"
        }
        release {
            java.srcDirs += "src/release/kotlin"
        }

        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    packagingOptions {
        // see https://stackoverflow.com/questions/44342455
        resources.excludes.add("META-INF/*")
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation "androidx.core:core-ktx:+"
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //firebase
    implementation 'com.google.firebase:firebase-config:21.6.1'
    implementation 'com.google.firebase:firebase-crashlytics:18.6.2'
    //firestore
    implementation 'com.google.firebase:firebase-storage:20.2.1'
    implementation 'com.google.firebase:firebase-firestore:24.11.0'

    //firebase app distribution
    implementation 'com.google.firebase:firebase-perf:20.5.2'
    implementation 'com.google.firebase:firebase-appdistribution-gradle:4.2.0'

    //firebase auth
    implementation 'com.google.firebase:firebase-auth:22.3.1'
    implementation 'com.google.android.gms:play-services-auth:21.0.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'

    //Splash
    implementation 'androidx.core:core-splashscreen:1.0.1'

    //Room
    implementation "androidx.room:room-ktx:2.6.1"
    implementation "androidx.room:room-runtime:2.6.1"
    kapt "androidx.room:room-compiler:2.6.1"

    // Dagger
    implementation "com.google.dagger:dagger:2.47"
    kapt "com.google.dagger:dagger-compiler:2.47"

    //Coroutines Dependencies
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    //Coroutines Lifecycle Dependencies
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

    //Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2"

    implementation "com.maltaisn:recurpicker:2.1.7"

    //wave form seekbar
    implementation  'com.github.massoudss:waveformSeekBar:5.0.2'
    implementation 'com.github.lincollincol:amplituda:2.1.0'

    //image loader
    implementation 'com.github.bumptech.glide:glide:4.14.2'
    kapt 'com.github.bumptech.glide:compiler:4.14.2'

    //circle image
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    //animation
    implementation 'com.airbnb.android:lottie:5.2.0'

    //gson
    implementation 'com.google.code.gson:gson:2.10'

    //firebase
    implementation platform('com.google.firebase:firebase-bom:32.8.0')
    implementation 'com.google.firebase:firebase-analytics'

    //wave view
    implementation 'com.ssynhtn:wave-view:1.0'

    //rating bar
    implementation 'com.github.ome450901:SimpleRatingBar:1.5.1'

    // CameraX core library
    def camerax_version = '1.1.0-beta01'
    implementation "androidx.camera:camera-core:$camerax_version"
    // CameraX Camera2 extensions
    implementation "androidx.camera:camera-camera2:$camerax_version"
    // CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    // CameraX View class
    implementation "androidx.camera:camera-view:$camerax_version"

    //WindowManager
    implementation 'androidx.window:window:1.2.0'

    //Finger print Biometric
    implementation "androidx.biometric:biometric-ktx:1.2.0-alpha05"

    // Google Cloud Vision API
    implementation 'com.google.android.gms:play-services-base:18.3.0'
    implementation 'com.google.apis:google-api-services-vision:v1-rev16-1.22.0'
    implementation ('com.google.api-client:google-api-client-android:1.22.0') {
        exclude module: 'httpclient'
    }
    implementation ('com.google.http-client:google-http-client-gson:1.42.3') {
        exclude module: 'httpclient'
    }

    //Image cropper
    implementation "com.theartofdev.edmodo:android-image-cropper:2.8.0"

    //OCR firebase
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'

    //OCR play services
    implementation "com.google.android.gms:play-services-vision:20.1.3"
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, you should change the line below to return
        // ["room.schemaLocation=${schemaDir.path}"]
        return ["-Aroom.schemaLocation=${schemaDir.path}".toString()]
    }
}